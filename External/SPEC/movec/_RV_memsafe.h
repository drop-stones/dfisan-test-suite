#ifndef _RV_MEMSAFE_H
#define _RV_MEMSAFE_H
#define _RV_gnu89
#define _RV_use_trie
/*===----------------------------------------------------------------------===//
//
//  This file is automatically generated for data structures.
//
//===----------------------------------------------------------------------===*/

#if !defined(size_t)
typedef unsigned long int size_t;
#endif

/*Status of memory blocks.*/
typedef enum
{
  _RV_invalid,
  _RV_function,
  _RV_global,
  _RV_static,
  _RV_heap,
  _RV_stack,
  _RV_library /* allocated in a library function */
} _RV_status;

/*Status node with auto-deallocation.*/
typedef struct
{
  _RV_status stat;
  size_t count;
} _RV_stat_node;

/*Addresses of predefined status nodes with auto-deallocation.
  Their lifetime is the entire run of the program.*/
extern _RV_stat_node *_RV_function_sa;
extern _RV_stat_node *_RV_global_sa;
extern _RV_stat_node *_RV_static_sa;
extern _RV_stat_node *_RV_library_sa;

/*Pointer address.*/
typedef const void * const * _RV_ptr_addr;

/*Function address.*/
typedef void (*_RV_func_addr)();

/*Split-order key.*/
typedef size_t _RV_so_key_t;

/*Pointer metadata.*/
typedef struct _RV_pmd
{
  const void *base;
  const void *bound;
  _RV_stat_node *snda;  /*status node address*/
#if defined(_RV_use_trie)
  unsigned char pmdflag;  /*0 - uninitialized/removed;
      1 - initialized/allocated; 2 - freeable temp pmd*/
#elif defined(_RV_use_hashtable)
  _RV_ptr_addr ptra;    /*pointer address*/
  struct _RV_pmd *next; /*for resolving hash collisions*/
#if defined(_RV_use_ext_cas)
  _RV_so_key_t so_key;  /*split-order key, i.e., the reverse of ptra field*/
#endif
#endif
} _RV_pmd;

#if defined(_RV_use_trie)
    #define _RV_pmd_init_val {0, 0, 0, 0}
#elif defined(_RV_use_hashtable)
  #if !defined(_RV_use_ext_cas)
    #define _RV_pmd_init_val {0, 0, 0, (_RV_ptr_addr)-1, 0}
  #else
    #define _RV_pmd_init_val {0, 0, 0, (_RV_ptr_addr)-1, 0, (size_t)-1}
  #endif
#endif

/*Pointer metadata in function pointer metadata.*/
typedef struct
{
  const void *base;
  const void *bound;
  _RV_stat_node *snda;  /*status node address*/
} _RV_fmd_pmd;

/*Function pointer metadata.*/
typedef struct _RV_fmd
{
  _RV_fmd_pmd *pmds;    /*pointer metadata*/
  unsigned char capacity; /*number of pointer metadata*/
  _RV_func_addr func;   /*function address*/
  struct _RV_fmd *next; /*for resolving hash collisions*/
#if defined(_RV_use_ext_cas)
  _RV_so_key_t so_key;  /*split-order key, i.e., the reverse of func field*/
#endif
} _RV_fmd;

/*Hash table for storing (function) pointer metadata.*/
typedef struct
{
  void **slots;    /*array  of slots*/
  size_t capacity; /*number of slots*/
  size_t size;     /*number of occupied slots*/
  size_t count;    /*number of inserted elements*/
} _RV_hashtbl;

/*Count of memory safety errors.*/
extern size_t _RV_error_count;

/*Print the runtime error count.*/
void _RV_print_error_count();
/*===----------------------------------------------------------------------===//
//
//  This file is automatically generated for metadata.
//
//===----------------------------------------------------------------------===*/

/*===----------------------------- stat_node ------------------------------===*/
_RV_stat_node *_RV_stat_node_create(_RV_status stat, size_t count);
unsigned         _RV_stat_node_dec(_RV_stat_node *snda);
/*===----------------------------- pmd ------------------------------------===*/
_RV_pmd       *_RV_pmd_create(_RV_ptr_addr ptra, _RV_stat_node *snda,
                       _RV_status stat, const void *base, const void *bound);
void             _RV_pmd_free_null_ptr(_RV_pmd *pmd);
const void      *_RV_pmd_get_base(const _RV_pmd *pmd);
const void      *_RV_pmd_get_bound(const _RV_pmd *pmd);
_RV_stat_node *_RV_pmd_get_snda(const _RV_pmd *pmd);
_RV_status     _RV_pmd_get_stat(const _RV_pmd *pmd);
void             _RV_pmd_print(const _RV_pmd *pmd);
_RV_pmd       *_RV_pmd_set(_RV_pmd *pmd, _RV_stat_node *snda,
                       _RV_status stat, const void *base, const void *bound);
void            *_RV_pmd_set_ret(_RV_pmd *pmd, _RV_stat_node *snda,
                       _RV_status stat, const void *base, const void *bound, const void *ret);
void             _RV_pmd_set_null(_RV_pmd *pmd);
_RV_pmd       *_RV_pmd_cp_pmd(_RV_pmd *pmd, const _RV_pmd *pmd2);
void            *_RV_pmd_cp_pmd_ret(_RV_pmd *pmd, const _RV_pmd *pmd2, const void *ret);
_RV_pmd       *_RV_pmd_cp_fmd_pmd(_RV_pmd *pmd, const _RV_fmd_pmd *fpmd);
/*===----------------------------- fmd_pmd --------------------------------===*/
const void      *_RV_fmd_pmd_get_base(const _RV_fmd_pmd *fpmd);
const void      *_RV_fmd_pmd_get_bound(const _RV_fmd_pmd *fpmd);
/*===----------------------------------------------------------------------===//
//
//  This file is automatically generated for the functions related to
//  the algorithm for the dynamic analysis of memory safety.
//
//===----------------------------------------------------------------------===*/

/*===----------------------------- utilities ------------------------------===*/
int _RV_sstrlen(const char *str);
/*===----------------------------- pmd_tbl --------------------------------===*/
_RV_pmd *_RV_pmd_tbl_create(_RV_ptr_addr ptra);
_RV_pmd *_RV_pmd_tbl_lookup(_RV_ptr_addr ptra);
void       _RV_pmd_tbl_print(_RV_ptr_addr ptra, const char *ptr_name);
_RV_pmd *_RV_pmd_tbl_update_sa(_RV_ptr_addr ptra, _RV_stat_node *snda,
                         const void *base, const void *bound);
void      *_RV_pmd_tbl_update_sa_ret(_RV_ptr_addr ptra, _RV_stat_node *snda,
                         const void *base, const void *bound, const void *ret);
_RV_pmd *_RV_pmd_tbl_update_pmd(_RV_ptr_addr ptra, const _RV_pmd *pmd);
void      *_RV_pmd_tbl_update_pmd_ret(_RV_ptr_addr ptra, const _RV_pmd *pmd,
                         const void *ret);
_RV_pmd *_RV_pmd_tbl_update_fpmd(_RV_ptr_addr ptra, const _RV_fmd_pmd *fpmd);
_RV_pmd *_RV_pmd_tbl_update_ptr(_RV_ptr_addr ptra, _RV_ptr_addr ptra1);
void      *_RV_pmd_tbl_update_ptr_ret(_RV_ptr_addr ptra, _RV_ptr_addr ptra1,
                         const void *ret);
void       _RV_pmd_tbl_remove(_RV_ptr_addr ptra);
void       _RV_pmd_tbl_remove_pa(_RV_ptr_addr array, size_t size);
void       _RV_pmd_var_remove_pa(_RV_pmd *array, size_t size);

_RV_pmd *_RV_pmd_tbl_update_argv(int argc, char ***argv_addr, char **argv);
_RV_pmd *_RV_pmd_var_update_argv(int argc, _RV_pmd *argv_pmd, char **argv);
void       _RV_pmd_tbl_remove_argv(int argc, char ***argv_addr, char **argv);
void       _RV_pmd_var_remove_argv(int argc, _RV_pmd *argv_pmd, char **argv);
_RV_pmd *_RV_pmd_tbl_update_envp(char ***envp_addr, char **envp);
_RV_pmd *_RV_pmd_var_update_envp(_RV_pmd *envp_pmd, char **envp);
void       _RV_pmd_tbl_remove_envp(char ***envp_addr, char **envp);
void       _RV_pmd_var_remove_envp(_RV_pmd *envp_pmd, char **envp);
/*===----------------------------- fmd_tbl --------------------------------===*/
_RV_fmd     *_RV_fmd_tbl_create(_RV_func_addr func, unsigned char capacity);
_RV_fmd_pmd *_RV_fmd_tbl_lookup_fpmd(_RV_func_addr func, unsigned char i);
void           _RV_fmd_tbl_print(_RV_func_addr func, unsigned char i,
                             const char *func_name);
_RV_fmd     *_RV_fmd_tbl_update_pmd(_RV_func_addr func, unsigned char i,
                             const _RV_pmd *pmd);
void           _RV_fmd_tbl_remove(_RV_func_addr func);
/*===----------------------------- check ----------------------------------===*/
void *_RV_check_dpv(const _RV_pmd *pmd,
        const void *ptr, size_t size,
        const char *file_name, const char *func_name,
        unsigned line, unsigned column, const char *ptr_name);
long _RV_check_dpv_ss(const _RV_pmd *pmd,
        const void *ptr, long subscript, size_t size,
        const char *file_name, const char *func_name,
        unsigned line, unsigned column, const char *ptr_name);
void *_RV_check_dpfv(const _RV_pmd *pmd, const void *ptr,
        const char *file_name, const char *func_name,
        unsigned line, unsigned column, const char *ptr_name);
void *_RV_check_dpc(const void *base, const void *bound,
        const void *ptr, size_t size,
        const char *file_name, const char *func_name,
        unsigned line, unsigned column, const char *ptr_name);
long _RV_check_dpc_ss(const void *base, const void *bound,
        const void *ptr, long subscript, size_t size,
        const char *file_name, const char *func_name,
        unsigned line, unsigned column, const char *ptr_name);
void *_RV_check_dpfc(const void *base, const void *bound, const void *ptr,
        const char *file_name, const char *func_name,
        unsigned line, unsigned column, const char *ptr_name);
/*********************************** ctype.h **********************************/
#include <ctype.h>

 unsigned short **_RV___ctype_b_loc(_RV_pmd *ret_pmd);
/***************************** getopt.h ********************************/
#if defined(_DEFAULT_SOURCE)
#include <getopt.h>

 int _RV_getopt_long(_RV_pmd *argv_pmd, _RV_pmd *optstring_pmd,
        _RV_pmd *longopts_pmd, _RV_pmd *longindex_pmd,
        int argc, char * const argv[], const char *optstring,
        const struct option *longopts, int *longindex,
        const char *file_name, const char *func_name,
        unsigned  a_line, unsigned  a_col, const char  *a_name,
        unsigned  o_line, unsigned  o_col, const char  *o_name,
        unsigned lo_line, unsigned lo_col, const char *lo_name,
        unsigned li_line, unsigned li_col, const char *li_name);
#endif
/******************************* locale.h *************************************/
#include <locale.h>

 char *_RV_setlocale(_RV_pmd *ret_pmd, _RV_pmd *locale_pmd,
        int category, char *locale,
        const char *file_name, const char *func_name,
        unsigned l_line, unsigned l_col, const char *l_name);

 struct lconv *_RV_localeconv(_RV_pmd *ret_pmd);
/******************************* math.h ***************************************/
#include <math.h>
 double _RV_frexp(_RV_pmd *exponent_pmd,
        double x, int *exponent,
        const char *file_name, const char *func_name,
        unsigned e_line, unsigned e_col, const char *e_name);

 double _RV_modf(_RV_pmd *integer_pmd,
        double x, double *integer,
        const char *file_name, const char *func_name,
        unsigned i_line, unsigned i_col, const char *i_name);
/***************************** pwd.h ********************************/
#include <sys/types.h>
#include <pwd.h>

 struct passwd *_RV_getpwnam(_RV_pmd *ret_pmd,
        _RV_pmd *name_pmd,
        const char *name,
        const char *file_name, const char *func_name,
        unsigned n_line, unsigned n_col, const char *n_name);

 struct passwd *_RV_getpwuid(_RV_pmd *ret_pmd,
        uid_t uid);

#if defined(_DEFAULT_SOURCE)
 struct passwd *_RV_getpwent(_RV_pmd *ret_pmd);
#endif
/******************************* setjmp.h *************************************/
#include <setjmp.h>
 int _RV_setjmp(_RV_pmd *env_pmd,
        jmp_buf env,
        const char *file_name, const char *func_name,
        unsigned e_line, unsigned e_col, const char *e_name);

 void _RV_longjmp(_RV_pmd *env_pmd,
        jmp_buf env, int value,
        const char *file_name, const char *func_name,
        unsigned e_line, unsigned e_col, const char *e_name);
/******************************* signal.h *************************************/
#include <signal.h>
 __sighandler_t _RV_signal(_RV_pmd *ret_pmd, _RV_pmd *handler_pmd,
        int signum, __sighandler_t handler,
        const char *file_name, const char *func_name,
        unsigned h_line, unsigned h_col, const char *h_name);
/****************************** sys/stat.h ************************************/
#include <sys/stat.h>
 int _RV_fstat(_RV_pmd *buf_pmd,
        int fd, struct stat *buf,
        const char *file_name, const char *func_name,
        unsigned b_line, unsigned b_col, const char *b_name);

/******************************* stdio.h **************************************/
#include <stdio.h>

 int _RV_fclose(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 void _RV_clearerr(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_feof(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_ferror(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_fflush(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_fgetpos(_RV_pmd *fp_pmd, _RV_pmd *pos_pmd,
        FILE *fp, fpos_t *pos,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned p_line, unsigned p_col, const char *p_name);

 FILE *_RV_fopen(_RV_pmd *ret_pmd,
        _RV_pmd *filename_pmd, _RV_pmd *mode_pmd,
        const char *filename, char *mode,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned m_line, unsigned m_col, const char *m_name);

#if !defined(_POSIX_C_SOURCE)
 int _RV_fdopen(
        _RV_pmd *mode_pmd,
        int fd, char *mode,
        const char *file_name, const char *func_name,
        unsigned m_line, unsigned m_col, const char *m_name);
#else
 FILE *_RV_fdopen(_RV_pmd *ret_pmd,
        _RV_pmd *mode_pmd,
        int fd, char *mode,
        const char *file_name, const char *func_name,
        unsigned m_line, unsigned m_col, const char *m_name);
#endif

 FILE *_RV_freopen(_RV_pmd *ret_pmd,
        _RV_pmd *filename_pmd, _RV_pmd *mode_pmd, _RV_pmd *fp_pmd,
        char *filename, char *mode, FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned m_line, unsigned m_col, const char *m_name,
        unsigned p_line, unsigned p_col, const char *p_name);

 int _RV_fileno(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 size_t _RV_fread(_RV_pmd *ptr_pmd, _RV_pmd *fp_pmd,
        void *ptr, size_t size, size_t nmemb, FILE *fp,
        const char *file_name, const char *func_name,
        unsigned p_line, unsigned p_col, const char *p_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_fseek(_RV_pmd *fp_pmd,
        FILE *fp, long int offset, int whence,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_fsetpos(_RV_pmd *fp_pmd, _RV_pmd *pos_pmd,
        FILE *fp, fpos_t *pos,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned p_line, unsigned p_col, const char *p_name);

 long int _RV_ftell(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 size_t _RV_fwrite(_RV_pmd *ptr_pmd, _RV_pmd *fp_pmd,
        const void *ptr, size_t size, size_t nmemb, FILE *fp,
        const char *file_name, const char *func_name,
        unsigned p_line, unsigned p_col, const char *p_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_remove(_RV_pmd *filename_pmd,
        const char *filename,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_rename(_RV_pmd *old_pmd, _RV_pmd *new_pmd,
        const char *old_filename, const char *new_filename,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned n_line, unsigned n_col, const char *n_name);

 void _RV_rewind(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 void _RV_setbuf(_RV_pmd *fp_pmd, _RV_pmd *buffer_pmd,
        FILE *fp, char *buffer,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned b_line, unsigned b_col, const char *b_name);

 int _RV_setvbuf(_RV_pmd *fp_pmd, _RV_pmd *buffer_pmd,
        FILE *fp, char *buffer, int mode, size_t size,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned b_line, unsigned b_col, const char *b_name);

 FILE *_RV_tmpfile(_RV_pmd *ret_pmd);

 char *_RV_tmpnam(_RV_pmd *ret_pmd,
        _RV_pmd *str_pmd,
        char *str,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);

#include <stdarg.h>

 int _RV_vfprintf(
        _RV_pmd *fp_pmd, _RV_pmd *format_pmd, _RV_pmd *arg_va_list, _RV_pmd *arg_pmd,
        FILE *fp, const char *format, va_list arg,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned r_line, unsigned r_col, const char *r_name,
        unsigned a_line, unsigned a_col, const char *a_name);

 int _RV_vprintf(_RV_pmd *format_pmd, _RV_pmd *arg_va_list, _RV_pmd *arg_pmd,
        const char *format, va_list arg,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned a_line, unsigned a_col, const char *a_name);

 int _RV_vsprintf(
        _RV_pmd *str_pmd, _RV_pmd *format_pmd, _RV_pmd *arg_va_list, _RV_pmd *arg_pmd,
        char *str, const char *format, va_list arg,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned a_line, unsigned a_col, const char *a_name);

 int _RV_fgetc(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 char *_RV_fgets(_RV_pmd *ret_pmd,
        _RV_pmd *str_pmd, _RV_pmd *fp_pmd,
        char *str, int n, FILE *fp,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_fputc(_RV_pmd *fp_pmd,
        int ch, FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_fputs(_RV_pmd *str_pmd, _RV_pmd *fp_pmd,
        char *str, FILE *fp,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV__IO_getc(_RV_pmd *fp_pmd,
        FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

#if !defined __USE_ISOC11 \
    || (defined __cplusplus && __cplusplus <= 201103L)
 char *_RV_gets(_RV_pmd *ret_pmd,
        _RV_pmd *str_pmd,
        char *str,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);
#else
 int _RV_gets(
        _RV_pmd *str_pmd,
        char *str,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);
#endif

 int _RV__IO_putc(_RV_pmd *fp_pmd,
        int ch, FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 int _RV_puts(_RV_pmd *str_pmd,
        char *str,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);

 int _RV_ungetc(_RV_pmd *fp_pmd,
        int ch, FILE *fp,
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 void _RV_perror(_RV_pmd *str_pmd,
        char *str,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);
/******************************* stdlib.h *************************************/
#include <stdlib.h>

 double _RV_atof(_RV_pmd *str_pmd,
        const char *str,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);

 int _RV_atoi(_RV_pmd *str_pmd,
        const char *str,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);

 long int _RV_atol(_RV_pmd *str_pmd,
        const char *str,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);

 double _RV_strtod(_RV_pmd *str_pmd, _RV_pmd *endptr_pmd,
        const char *str, char **endptr,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name,
        unsigned e_line, unsigned e_col, const char *e_name);

 long int _RV_strtol(_RV_pmd *str_pmd, _RV_pmd *endptr_pmd,
        const char *str, char **endptr, int base,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name,
        unsigned e_line, unsigned e_col, const char *e_name);

 unsigned long int _RV_strtoul(
        _RV_pmd *str_pmd, _RV_pmd *endptr_pmd,
        const char *str, char **endptr, int base,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name,
        unsigned e_line, unsigned e_col, const char *e_name);

 void *_RV_calloc(_RV_pmd *ret_pmd,
        size_t n, size_t size);

 void _RV_free(_RV_pmd *ptr_pmd,
        void *ptr,
        const char *file_name, const char *func_name,
        unsigned p_line, unsigned p_col, const char *p_name);

 void *_RV_malloc(_RV_pmd *ret_pmd,
        size_t size);

 void *_RV_realloc(_RV_pmd *ret_pmd, _RV_pmd *ptr_pmd,
        void *ptr, unsigned int newsize,
        const char *file_name, const char *func_name,
        unsigned p_line, unsigned p_col, const char *p_name);

 int _RV_atexit(_RV_pmd *func_pmd,
        void (*func)(void),
        const char *file_name, const char *func_name,
        unsigned f_line, unsigned f_col, const char *f_name);

 char *_RV_getenv(_RV_pmd *ret_pmd, _RV_pmd *name_pmd,
        const char *name,
        const char *file_name, const char *func_name,
        unsigned n_line, unsigned n_col, const char *n_name);

 int _RV_system(_RV_pmd *str_pmd,
        const char *str,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);

 int _RV_mblen(_RV_pmd *str_pmd,
        const char *str, size_t n,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);

 size_t _RV_mbstowcs(_RV_pmd *pwcs_pmd, _RV_pmd *str_pmd,
        wchar_t *pwcs, char *str, size_t n,
        const char *file_name, const char *func_name,
        unsigned p_line, unsigned p_col, const char *p_name,
        unsigned s_line, unsigned s_col, const char *s_name);

 int _RV_mbtowc(_RV_pmd *pwc_pmd, _RV_pmd *str_pmd,
        wchar_t *pwc, char *str, size_t n,
        const char *file_name, const char *func_name,
        unsigned p_line, unsigned p_col, const char *p_name,
        unsigned s_line, unsigned s_col, const char *s_name);

 size_t _RV_wcstombs(_RV_pmd *str_pmd, _RV_pmd *pwcs_pmd,
        char *str, wchar_t *pwcs, size_t n,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name,
        unsigned p_line, unsigned p_col, const char *p_name);

 int _RV_wctomb(_RV_pmd *str_pmd,
        char *str, wchar_t wchar,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name);

 void *_RV_bsearch(_RV_pmd *ret_pmd,
        _RV_pmd *key_pmd, _RV_pmd *base_pmd, _RV_pmd *compar_pmd,
        void *key, void *base, size_t nmemb, size_t size, __compar_fn_t compar,
        const char *file_name, const char *func_name,
        unsigned k_line, unsigned k_col, const char *k_name,
        unsigned b_line, unsigned b_col, const char *b_name,
        unsigned c_line, unsigned c_col, const char *c_name);

 void _RV_qsort(
        _RV_pmd *base_pmd, _RV_pmd *compar_pmd,
        void *base, size_t num, size_t size, __compar_fn_t compar,
        const char *file_name, const char *func_name,
        unsigned b_line, unsigned b_col, const char *b_name,
        unsigned c_line, unsigned c_col, const char *c_name);
/***************************** string.h ********************************/
#include <string.h>

 void *_RV_memchr(_RV_pmd *ret_pmd, _RV_pmd *src_pmd,
                         const void *src, int c, size_t n,
                         const char *file_name, const char *func_name,
                         unsigned s_line, unsigned s_col, const char *s_name);

 int _RV_memcmp(_RV_pmd *str1_pmd, _RV_pmd *str2_pmd,
                       const void *str1, const void *str2, size_t n,
                       const char *file_name, const char *func_name,
                       unsigned s1_line, unsigned s1_col, const char *s1_name,
                       unsigned s2_line, unsigned s2_col, const char *s2_name);

 void *_RV_memcpy(_RV_pmd *ret_pmd, _RV_pmd *dest_pmd, _RV_pmd *src_pmd,
                         void *dest, const void *src, size_t n,
                         const char *file_name, const char *func_name,
                         unsigned d_line, unsigned d_col, const char *d_name,
                         unsigned s_line, unsigned s_col, const char *s_name);

#if defined(_RV_c89) || defined(_RV_c90) || defined(_RV_c99) || defined(_RV_c11)
 int _RV_memccpy(_RV_pmd *dest_pmd, _RV_pmd *src_pmd,
                          void *dest, const void *src, int c, size_t n,
                          const char *file_name, const char *func_name,
                          unsigned d_line, unsigned d_col, const char *d_name,
                          unsigned s_line, unsigned s_col, const char *s_name);
#else
 void *_RV_memccpy(_RV_pmd *ret_pmd, _RV_pmd *dest_pmd, _RV_pmd *src_pmd,
                          void *dest, const void *src, int c, size_t n,
                          const char *file_name, const char *func_name,
                          unsigned d_line, unsigned d_col, const char *d_name,
                          unsigned s_line, unsigned s_col, const char *s_name);
#endif

 void *_RV_memmove(_RV_pmd *ret_pmd, _RV_pmd *dest_pmd, _RV_pmd *src_pmd,
                          void *dest, const void *src, size_t n,
                          const char *file_name, const char *func_name,
                          unsigned d_line, unsigned d_col, const char *d_name,
                          unsigned s_line, unsigned s_col,  const char *s_name);

 void *_RV_memset(_RV_pmd *ret_pmd, _RV_pmd *str_pmd,
                         void *str, int c, size_t n,
                         const char *file_name, const char *func_name,
                         unsigned s_line, unsigned s_col, const char *s_name);

 char *_RV_strcat(_RV_pmd *ret_pmd, _RV_pmd *dest_pmd, _RV_pmd *src_pmd,
                         char *dest, const char *src,
                         const char *file_name, const char *func_name,
                         unsigned d_line, unsigned d_col, const char *d_name,
                         unsigned s_line, unsigned s_col, const char *s_name);

 char *_RV_strncat(_RV_pmd *ret_pmd, _RV_pmd *dest_pmd, _RV_pmd *src_pmd,
                          char *dest, const char *src, int n,
                          const char *file_name, const char *func_name,
                          unsigned d_line, unsigned d_col, const char *d_name,
                          unsigned s_line, unsigned s_col, const char *s_name);

 char *_RV_strchr(_RV_pmd *ret_pmd, _RV_pmd *src_pmd,
                         const char *src, int c,
                         const char *file_name, const char *func_name,
                         unsigned s_line, unsigned s_col, const char *s_name);

 int _RV_strcmp(_RV_pmd *str1_pmd, _RV_pmd *str2_pmd,
                       const char *str1, const char *str2,
                       const char *file_name, const char *func_name,
                       unsigned s1_line, unsigned s1_col, const char *s1_name,
                       unsigned s2_line, unsigned s2_col, const char *s2_name);

 int _RV_strncmp(_RV_pmd *str1_pmd, _RV_pmd *str2_pmd,
                        const char *str1, const char *str2, size_t n,
                        const char *file_name, const char *func_name,
                        unsigned s1_line, unsigned s1_col, const char *s1_name,
                        unsigned s2_line, unsigned s2_col, const char *s2_name);

 int _RV_strcoll(_RV_pmd *str1_pmd, _RV_pmd *str2_pmd,
                        char *str1, char *str2,
                        const char *file_name, const char *func_name,
                        unsigned s1_line, unsigned s1_col, const char *s1_name,
                        unsigned s2_line, unsigned s2_col, const char *s2_name);

 char *_RV_strcpy(_RV_pmd *ret_pmd, _RV_pmd *dest_pmd, _RV_pmd *src_pmd,
                         char *dest, const char *src,
                         const char *file_name, const char *func_name,
                         unsigned d_line, unsigned d_col, const char *d_name,
                         unsigned s_line, unsigned s_col, const char *s_name);

 char *_RV_strncpy(_RV_pmd *ret_pmd, _RV_pmd *dest_pmd, _RV_pmd *src_pmd,
                          char *dest, const char *src, int n,
                          const char *file_name, const char *func_name,
                          unsigned d_line, unsigned d_col, const char *d_name,
                          unsigned s_line, unsigned s_col, const char *s_name);

 size_t _RV_strcspn(_RV_pmd *str1_pmd, _RV_pmd *str2_pmd,
                           char *str1, char *str2,
                           const char *file_name, const char *func_name,
                           unsigned s1_line, unsigned s1_col, const char *s1_name,
                           unsigned s2_line, unsigned s2_col, const char *s2_name);

 char *_RV_strerror(_RV_pmd *ret_pmd,
                           int errnum);

 size_t _RV_strlen(_RV_pmd *str_pmd,
                          const char *str,
                          const char *file_name, const char *func_name,
                          unsigned s_line, unsigned s_col, const char *s_name);

 char *_RV_strpbrk(_RV_pmd *ret_pmd, _RV_pmd *str1_pmd, _RV_pmd *str2_pmd,
                          char *str1, char *str2,
                          const char *file_name, const char *func_name,
                          unsigned s1_line, unsigned s1_col, const char *s1_name,
                          unsigned s2_line, unsigned s2_col, const char *s2_name);

 char *_RV_strrchr(_RV_pmd *ret_pmd, _RV_pmd *str_pmd,
                          char *str, int c,
                          const char *file_name, const char *func_name,
                          unsigned s_line, unsigned s_col, const char *s_name);

 size_t _RV_strspn(_RV_pmd *str1_pmd, _RV_pmd *str2_pmd,
                          char *str1, char *str2,
                          const char *file_name, const char *func_name,
                          unsigned s_line, unsigned s_col, const char *s_name,
                          unsigned t_line, unsigned t_col, const char *t_name);

 char *_RV_strstr(_RV_pmd *ret_pmd, _RV_pmd *haystack_pmd, _RV_pmd *needle_pmd,
                         const char *haystack, const char *needle,
                         const char *file_name, const char *func_name,
                         unsigned h_line, unsigned h_col, const char *h_name,
                         unsigned n_line, unsigned n_col, const char *n_name);

 char *_RV_strtok(_RV_pmd *ret_pmd, _RV_pmd *str_pmd, _RV_pmd *delim_pmd,
                         char *str, const char *delim,
                         const char *file_name, const char *func_name,
                         unsigned s_line, unsigned s_col, const char *s_name,
                         unsigned d_line, unsigned d_col, const char *d_name);

 size_t _RV_strxfrm(_RV_pmd *dest_pmd, _RV_pmd *src_pmd,
                           char *dest, char *src, size_t n,
                           const char *file_name, const char *func_name,
                           unsigned d_line, unsigned d_col, const char *d_name,
                           unsigned s_line, unsigned s_col, const char *s_name);

 void _RV_bzero(_RV_pmd *s_pmd,
                       void *s, int n,
                       const char *file_name, const char *func_name,
                       unsigned s_line, unsigned s_col, const char *s_name);

 void _RV_bcopy(_RV_pmd *src_pmd, _RV_pmd *dest_pmd,
                       void *src, void *dest, int n,
                       const char *file_name, const char *func_name,
                       unsigned s_line, unsigned s_col, const char *s_name,
                       unsigned d_line, unsigned d_col, const char *d_name);
/***************************** time.h ********************************/
#include <time.h>

 char *_RV_asctime(_RV_pmd *ret_pmd,
        _RV_pmd *timeptr_pmd,
        struct tm *timeptr,
        const char *file_name, const char *func_name,
        unsigned t_line, unsigned t_col, const char *t_name);

 char *_RV_ctime(_RV_pmd *ret_pmd,
        _RV_pmd *timeptr_pmd,
        time_t *timeptr,
        const char *file_name, const char *func_name,
        unsigned t_line, unsigned t_col, const char *t_name);


 struct tm *_RV_gmtime(_RV_pmd *ret_pmd,
        _RV_pmd *timeptr_pmd,
        time_t *timeptr,
        const char *file_name, const char *func_name,
        unsigned t_line, unsigned t_col, const char *t_name);

 struct tm *_RV_localtime(_RV_pmd *ret_pmd,
        _RV_pmd *timeptr_pmd,
        time_t *timeptr,
        const char *file_name, const char *func_name,
        unsigned t_line, unsigned t_col, const char *t_name);

 time_t _RV_mktime(_RV_pmd *timeptr_pmd,
        struct tm *timeptr,
        const char *file_name, const char *func_name,
        unsigned t_line, unsigned t_col, const char *t_name);

 size_t _RV_strftime(
        _RV_pmd *str_pmd, _RV_pmd *format_pmd, _RV_pmd *timeptr_pmd,
        char *str, size_t maxsize, char *format, struct tm *timeptr,
        const char *file_name, const char *func_name,
        unsigned s_line, unsigned s_col, const char *s_name,
        unsigned f_line, unsigned f_col, const char *f_name,
        unsigned t_line, unsigned t_col, const char *t_name);

 time_t _RV_time(_RV_pmd *timeptr_pmd,
        time_t *timeptr,
        const char *file_name, const char *func_name,
        unsigned t_line, unsigned t_col, const char *t_name);

 int *_RV___errno_location(_RV_pmd *ret_pmd);
/***************************** sys/times.h ********************************/
#include <sys/times.h>

 clock_t _RV_times(_RV_pmd *buf_pmd,
        struct tms *buf,
        const char *file_name, const char *func_name,
        unsigned b_line, unsigned b_col, const char *b_name);
/***************************** unistd.h ********************************/
#include <unistd.h>

 ssize_t _RV_read(_RV_pmd *buf_pmd,
        int fd, void *buf, size_t nbytes,
        const char *file_name, const char *func_name,
        unsigned b_line, unsigned b_col, const char *b_name);

 ssize_t _RV_write(_RV_pmd *buf_pmd,
        int fd, void *buf, size_t nbytes,
        const char *file_name, const char *func_name,
        unsigned b_line, unsigned b_col, const char *b_name);

 int _RV_unlink(_RV_pmd *path_pmd,
        const char *path,
        const char *file_name, const char *func_name,
        unsigned p_line, unsigned p_col, const char *p_name);

 char *_RV_getcwd(_RV_pmd *ret_pmd, _RV_pmd *buf_pmd,
        char *buf, size_t size,
        const char *file_name, const char *func_name,
        unsigned b_line, unsigned b_col, const char *b_name);

#if _POSIX_C_SOURCE >= 2
 int _RV_getopt(_RV_pmd *argv_pmd, _RV_pmd *options_pmd,
        int argc, char *const *argv, const char *options,
        const char *file_name, const char *func_name,
        unsigned a_line, unsigned a_col, const char *a_name,
        unsigned o_line, unsigned o_col, const char *o_name);
#endif
/********************************* utime.h ************************************/
#include <utime.h>

 int _RV_utime(_RV_pmd *path_pmd, _RV_pmd *buf_pmd,
        char *path, struct utimbuf *times,
        const char *file_name, const char *func_name,
        unsigned p_line, unsigned p_col, const char *p_name,
        unsigned t_line, unsigned t_col, const char *t_name);
/******************************* call by ptr **********************************/

 void _RV_call_wrapper_by_ptr(void (*fp)(), ...);

 int _RV_has_wrapper(void (*fp)());

void _RV_global_init_code();

void _RV_global_clear_code();


#endif
